{"version":3,"sources":["logo.svg","auth/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Register","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","name","value","onSubmit","preventDefault","frontValidation","newUser","state","phone","email","password","file","console","log","axios","post","then","res","catch","err","onChangeFile","files","length","fileLength","fileNames","i","push","onUploadSubmit","filesProps","event","form","document","getElementsByClassName","checkValidity","stopPropagation","classList","add","react_default","a","createElement","className","noValidate","htmlFor","type","id","placeholder","required","multiple","action","method","encType","Component","App","src_auth_Register","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.970aab89.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport './Register.css';\nimport axios from 'axios';\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      phone: '',\n      email: '',\n      password: '',\n      file: '',\n      files: ''\n    };\n  }\n\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n \n  onSubmit = e => {\n    e.preventDefault();\n\n    //var validationStatus = this.frontValidation(e);\n    this.frontValidation(e);\n   // if(validationStatus){\n          const newUser = {\n            name: this.state.name,\n            phone: this.state.phone,\n            email: this.state.email,\n            password: this.state.password,\n            file: this.state.file\n          };\n      \n        // this.props.registerUser(newUser);\n        console.log(newUser);\n      \n\n        axios\n        .post('/api/users/register', newUser)\n        .then(res => {\n          console.log(res);\n        })\n        .catch(err =>\n          {\n            console.log(\"err : \"+err);\n            console.log(\"Email already exist..!!!!\");\n          }\n        );\n \n      \n\n   // }\n  }\n  onChangeFile = e =>{\n    console.log(e.target.files.length);\n    let fileLength =e.target.files.length;\n    let fileNames = [];\n    for(let i=0;i<fileLength;i++){\n      fileNames.push(e.target.files[i].name);\n    } \n    console.log(fileNames);\n    this.setState(\n      {files : fileNames}\n    );\n  }\n  \n  onUploadSubmit = e =>{\n   // e.preventDefault();\n \n    const filesProps = {\n      email : this.state.email,\n      files : this.state.files\n    };\n    \n    console.log(filesProps.files);\n\n\n    axios\n        .post('/api/users/filesmiddle', filesProps)\n        .then(res => {\n          console.log(res);\n        })\n        .catch(err =>\n          {\n            console.log(\"err : \"+err);\n          }\n        );\n  }\n\n  frontValidation(event){\n    \n      // Fetch all the forms we want to apply custom Bootstrap validation styles to\n      var form = document.getElementsByClassName('myform')[0];\n\n      if (form.checkValidity() === false) {\n        event.preventDefault();\n        event.stopPropagation();\n        //return false;\n      }\n      form.classList.add('was-validated');\n      //return true;\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n\n        <form className=\"needs-validation myform\" onSubmit={this.onSubmit} noValidate>\n          <div className=\"form-row\">\n            <div className=\"col-md-12 mb-3\">\n              <label htmlFor=\"validationCustom01\">Name</label>\n              <input type=\"text\" className=\"form-control\" \n                 id=\"validationCustom01\" placeholder=\"First name\" name=\"name\"\n                 value={this.state.name}\n                 onChange={this.onChange} required/>\n              <div className=\"invalid-feedback\">\n                 please enter name\n              </div>\n            </div>\n          <div className=\"col-md-12 mb-3\">\n              <label htmlFor=\"validationCustom02\">Contact Number</label>\n              <input type=\"number\" className=\"form-control\"\n               id=\"validationCustom02\" name=\"phone\"\n               value={this.state.phone}\n               onChange={this.onChange} placeholder=\"9876543210\" required/>\n              <div className=\"invalid-feedback\">\n                Enter number!\n              </div>\n            </div>\n          <div className=\"col-md-12 mb-3\">\n              <label htmlFor=\"validationCustom03\">Email </label>\n              <input type=\"email\" className=\"form-control\"  name=\"email\"\n              id=\"validationCustom03\" value={this.state.email}\n              onChange={this.onChange} placeholder=\"someone@gmail.com\"  required/>\n              <div className=\"invalid-feedback\">\n                Enter mail id!\n              </div>\n            </div>\n          <div className=\"col-md-12 mb-3\">\n              <label htmlFor=\"validationCustom04\">Password </label>\n              <input type=\"password\" className=\"form-control\"\n               id=\"validationCustom04\" placeholder=\"**********\" name=\"password\"\n               value={this.state.password}\n               onChange={this.onChange} required/>\n              <div className=\"invalid-feedback\">\n                Enter password\n              </div>\n          </div>\n          <div className=\"custom-file col-md-12 mb-3\">\n            <input type=\"file\" className=\"custom-file-input\" multiple id=\"validatedCustomFile\" \n            name=\"file\"\n            value={this.state.file}\n            onChange={this.onChange}\n            required/>\n            <label className=\"custom-file-label\" htmlFor=\"validatedCustomFile\">Choose file...</label>\n            <div className=\"invalid-feedback\">Example invalid custom file feedback</div>\n          </div>\n          <div className=\"col-md-12 mb-3\">\n            <button className=\"btn btn-primary\" type=\"submit\">Submit form</button>\n          </div>\n          \n          </div>\n        </form>\n\n          <form action=\"/files\" method=\"post\" onSubmit={this.onUploadSubmit} className=\"uploadform\" encType=\"multipart/form-data\">\n             <div className=\"form-row\">\n                <div className=\"col-md-6 mb-3 mt-3\">\n                  <input type=\"file\"\n                className=\"form-control\" name=\"file\" multiple onChange={this.onChangeFile}/>\n                </div>\n                <div className=\"col-md-2 mb-3 mt-3\">\n                  <input type=\"submit\" className=\"btn btn-primary\" value=\"Upload\"/>\n                </div>\n                <div className=\"col-md-4 mb-3 mt-3\">\n                    <div className=\"display_status upload_status\"></div>\n                </div>\n            </div>\n          </form>\n\n      </div>\n    );\n  }\n}\n\n\n\nexport default Register;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Register from './auth/Register';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <header className=\"App-header row\"> \n          <div className=\"col\">Header</div>\n        </header>\n        <Register></Register>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}